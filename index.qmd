---
format: 
  dashboard
---


## Row {height="30%"}

### Column

```{r}
#| content: valuebox
#| title: "Correct tips"
list(color = "darkgreen",
  icon = "clipboard-check",
  value = "50"
)

```

### Column

```{r}
#| content: valuebox
#| title: "Accuracy"
list(
  color = "darkgreen",
  icon = "bullseye", 
  value = "63%"
)

```

### Column

```{r}
#| content: valuebox
#| title: "Top percentile of AFL footy tipping"
list(
  color = "darkgreen",
  icon = "bar-chart-line", 
  value = "35%"
)

```

## Row {height="10%"}

Welcome to the Footy Forest. Here you'll find predictions, details on how the model is performing, rankings of each team and occasional statistical analyses of AFL footy and other sports.

## Row {height="60%"}

### Column

```{r}
library(tidyverse)
library(ggimage)
library(magick)


#Create df of correct tips by round
rounds <- c(0)
correct <- c(0)
total_correct <- sum(correct)
icon <- c("Images/Tree_icon_forest.png")
size = 11 
replace = TRUE

model_performance <- data.frame(rounds, correct, icon, size, replace)
  

ggplot(model_performance) +
  aes(x = rounds, y = cumsum(correct)) +
  geom_line(linewidth = 1) +
  scale_x_continuous(breaks = seq(min(rounds), max(rounds), 1)) +
  scale_y_continuous(breaks = seq(0, total_correct, 10)) +
  labs(y = "") +
  geom_image(aes(image = icon), size = 0.085) +
  ggtitle("Correct tips 2024") +
  theme_classic(base_size = 12) +
  theme(plot.title = element_text(hjust = 0.5))

```

### Column

```{r, make pretty predictions table}
########################################################################
library(tidyverse)
library(gt)
library(gtExtras)

  # Create GT table with formatting
  pretty_predictions_table <-   read.csv("tips_table_for_website.csv") %>%
    select(-matchID, -seas_rnd, -has_lineup_data) %>%
    rename(
        Home = home_team, 
        Away = away_team, 
        "Power" = elo_differential_c, 
        "Venue exp" = venue_experience_differential_c, 
        "Team rating" = team_player_rating_differential_c, 
        "Travel" = travel_differential_c, 
        "Predicted winner" = predicted_winner,
        "Margin" = margin,
        "Probability" = probability) %>%
    gt() %>% 
    tab_header( 
      title = paste0("Footy Forest predictions")
    ) %>% 
    tab_spanner(
      label = md("Relative advantage to the home team^1^"),
      columns = c("Power", "Venue exp", "Team rating", "Travel")
    ) %>%
    tab_footnote(
      footnote = md("^1^ Relative advantage to the home team scaled from -100 to +100 www.footyforest.com")
    ) %>% 
    opt_align_table_header(align = "left") %>%
    cols_align(
      columns = c("Power", "Venue exp", "Team rating", "Travel", 
                  "Predicted winner", "Margin"),
      align = "center"
    ) %>% 
    tab_style(
      style = cell_text(weight = "bold"), 
      locations = cells_body(columns = c("Predicted winner"))
    ) %>%
    fmt_number(
      columns = c("Power", "Venue exp", "Travel"),  # Team rating handled separately
      decimals = 0
    ) %>%
    data_color(
      columns = c("Power", "Venue exp", "Travel"),  
      palette = c("red", "white", "darkgreen"),
      domain = c(-100, 100), 
      quantiles = 5 
    ) %>% 
    cols_width(c("Power", "Venue exp", "Team rating", "Travel") ~ px(95))
  
  # Check if all Team rating values are numeric (not "TBA")
  all_team_ratings_numeric <- !any(pretty_predictions_table$`Team rating` == "TBA")
  
  # Add color to Team rating only if all values are numeric
  if(all_team_ratings_numeric) {
    pretty_predictions_table <- pretty_predictions_table %>%
      fmt_number(
        columns = c("Team rating"),
        decimals = 0
      ) %>%
      data_color(
        columns = c("Team rating"),  
        palette = c("red", "white", "darkgreen"),
        domain = c(-100, 100), 
        quantiles = 5 
      )

pretty_predictions_table
    
  }
```